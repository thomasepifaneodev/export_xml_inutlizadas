unit XmlInutilizacao.View.Conexao;

interface

uses
  System.SysUtils, System.Classes, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys, FireDAC.VCLUI.Wait,
  FireDAC.Phys.PGDef, FireDAC.Phys.PG, Data.DB, FireDAC.Comp.Client, uLib,
  Vcl.Forms, Vcl.Dialogs;

function ConexaoAtribuida(const NomeArquivo: string): Boolean;

type
  TdmDados = class(TDataModule)
    fdConnection: TFDConnection;
    fdPgLink: TFDPhysPgDriverLink;
    procedure DataModuleCreate(Sender: TObject);
  private
    { Private declarations }
    procedure CarregaDb;
  public
    { Public declarations }
    procedure Conectar;
    procedure Desconectar;
  end;

var
  dmDados: TdmDados;

implementation

{%CLASSGROUP 'Vcl.Controls.TControl'}

{$R *.dfm}

function ConexaoAtribuida(const NomeArquivo: string): Boolean;
begin
  Result := FileExists(NomeArquivo);
end;
procedure TdmDados.CarregaDb;
begin
  try
    fdConnection.Params.Clear;
    fdConnection.Params.UserName := 'adm';
    fdConnection.Params.Password := '1';
    fdConnection.Params.Add('DriverID=PG');
    fdConnection.Params.Add('Database=' + GetValorIni(ExtractFilePath(Application.ExeName) + 'XMLInut.ini', 'CONFIGURACAO', 'BASE'));
    fdConnection.Params.Add('Port=' + GetValorIni(ExtractFilePath(Application.ExeName) + 'XMLInut.ini', 'CONFIGURACAO', 'PORTA'));
    fdConnection.Params.Add('Server=' + GetValorIni(ExtractFilePath(Application.ExeName) + 'XMLInut.ini', 'CONFIGURACAO', 'SERVER'));
  except
    //
  end;
end;

procedure TdmDados.Conectar;
begin
  fdConnection.Connected;
end;

procedure TdmDados.DataModuleCreate(Sender: TObject);
begin
  dmDados.fdPgLink.VendorHome := ExtractFilePath(Application.ExeName);
end;

procedure TdmDados.Desconectar;
begin
   fdConnection.Connected := False;
end;



end.
